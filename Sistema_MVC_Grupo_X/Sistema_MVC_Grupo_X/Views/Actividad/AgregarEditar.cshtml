@model Sistema_MVC_Grupo_X.Models.Actividad
@{
    List<Sistema_MVC_Grupo_X.Models.Semestre> semestre = ViewBag.Semestre;
    List<Sistema_MVC_Grupo_X.Models.Criterio> criterio = ViewBag.Criterio;
    List<Sistema_MVC_Grupo_X.Models.EvidenciaActividad> evidenciaActividad = ViewBag.EvidenciaActividad;
    ViewBag.Title = "AgregarEditar";
}

<h2>Agregar Editar</h2>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="~/Actividad/Index">Actividad</a>
        </li>
        <li class="breadcrumb-item active">
            @(Model.actividad_id > 0 ? Model.nombre : "Nuevo Registro")
        </li>
    </ol>
</nav>
@using (Html.BeginForm("Guardar", "Actividad", FormMethod.Post, new { id = "frm-actividad" }))
{
    @Html.HiddenFor(x => x.actividad_id)
    <div class="card">
        <div class="card-header">Información de Actividad</div>
        <div class="card-body">
            <div class="container">
                <div class="row">
                    <div class="form-group col-4">
                        @Html.Label("Id")
                        @Html.TextBoxFor(x => x.actividad_id, new
                        { @class = "form-control", disabled = true })
                    </div>
                    <div class="form-group col-4">
                        @Html.Label("Semestre")
                        <select name="semestre_id" class="form-control">
                            <option @(Model.semestre_id.Equals("") ? "Selected" : "") value="">
                                -- Seleccione --
                            </option>
                            @foreach (var s in semestre)
                            {
                                <option @(Model.semestre_id.Equals(s.semestre_id) ? "Selected" : "") value="@s.semestre_id">@s.nombre</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(x => x.semestre_id, null,
                                               new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-4">
                        @Html.Label("Criterio")
                        <select name="criterio_id" class="form-control">
                            <option @(Model.criterio_id.Equals("") ? "Selected" : "") value="">
                                -- Seleccione --
                            </option>
                            @foreach (var c in criterio)
                            {
                                <option @(Model.criterio_id.Equals(c.criterio_id) ? "Selected" : "") value="@c.criterio_id">@c.nombre_spanish</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(x => x.criterio_id, null,
                                               new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-4">
                        @Html.Label("Nombre")
                        @Html.TextBoxFor(x => x.nombre, new
                        { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.nombre, null,
                                               new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-4">
                        @Html.Label("Fecha")
                        <input type="text" id="date-picker" name="fecha" class="form-control"
                               value="  @(Model.fecha.Equals(null) ? "" : Model.fecha.Value.ToString("dd/MM/yyyy"))" />
                    </div>
                    <div class="form-group col-4">
                        @Html.Label("Estado")
                        <div id="switchEstado">
                            <input id="estadoCheckbox" type="checkbox" data-toggle="toggle" @(Model.estado == "A" ? "checked" : "")
                                   data-on="Activo" data-off="Inactivo" data-size="normal" data-onstyle="success" data-offstyle="danger" data-width="100%">
                        </div>
                        <input name="estado" id="estado" type="hidden" value="@(Model.estado == "A" ? "A" : "I")">
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-8">
                        @Html.Label("Descripcion")
                        @Html.TextBoxFor(x => x.descripcion, new
                        { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.descripcion, null,
                                new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-4">
                        @Html.Label("UrlActividad")
                        @Html.TextBoxFor(x => x.urlactividad, new
                        { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.urlactividad, null,
                                new { @class = "text-danger" })
                    </div>
                </div>

                @* Si el registro existe, boton agregar detalle, sino no *@

                @if (!(Model.actividad_id == 0))
                {
                    <hr style="height:1px; border:none; color:#000; background-color:#000;" />
                    <div class="row align-content-stretch">
                        <div class="form-group col-9">
                            <b>@Html.Label("Detalle Actividad")</b>
                        </div>
                        <div class="form-group col-3">
                            <button type="button" class="btn btn-block btn-success" onclick="crearElementos('cuerpoTabla')">
                                <span class="glyphicon  ">Agregar detalle</span>
                            </button>
                        </div>
                    </div>
                    @* Creando lista criterio invisible *@
                    <div hidden>
                        <select id="listaCriterios" name="criterio_id" class="form-control">
                            <option value="x">-- Seleccione --</option>
                            @foreach (var c in criterio)
                            {
                                <option value="@c.criterio_id">@c.nombre_spanish</option>
                            }
                        </select>
                    </div>
                    @* Fin de lista criterio invisible *@

                    @* Creadno lista de estado para tabla *@

                    <div hidden>
                        <select id="listaEstados" name="estado" class="form-control">
                            <option value="x">-- Seleccione --</option>
                            <option value="A">Activo</option>
                            <option value="I">Inactivo</option>
                        </select>
                    </div>

                    @* Fin de lista de estado para tabla*@


                    <table class="table" id="tablaElementos">
                        <thead class="thead-dark">
                            <tr>
                                <th style="width:8%; text-align:center">Id</th>
                                <th style="width:25%; text-align:center">Archivo</th>
                                <th style="width:25%; text-align:center">Tamaño</th>
                                <th style="width:20%; text-align:center">Tipo</th>
                                <th style="width:25%; text-align:center">Descripcion</th>
                                <th style="width:25%; text-align:center">Acciones</th>
                            </tr>
                        </thead>
                        <tbody id="cuerpoTabla">

                            @* AGREGAR TODO EL CODIGO FOR PARA DETALLE *@
                            @foreach (var ea in evidenciaActividad)
                            {
                                <tr>
                                    @if (ea.actividad_id == Model.actividad_id)
                                    {
                                        <td>
                                            <label id="idDetAsig">@ea.evidenciaactividad_id</label>     @*//ID DE ASIGNACION*@
                                        </td>
                                        <td>
                                            <label id="idDetAsig">@ea.archivo</label>                   @*//NOMBRE ARCHIVO*@
                                        </td>
                                        <td>
                                            <label id="idDetAsig">@ea.tamanio</label>                   @*//TAMAÑO ARCHIVO*@
                                        </td>
                                        <td>
                                            <label id="idDetAsig">@ea.tipo</label>                      @*//TIPO ARCHIVO*@
                                        </td>
                                        <td>
                                            <label id="idDetAsig">@ea.descripcion</label>               @*//DESCRIPCION ARCHIVO*@
                                        </td>
                                        <td class="row justify-content-around">
                                            <button id="btnModificar" type="button" class="btn btn-warning" onclick="modificarDetalleAsignacion(this,@Model.actividad_id)">Modificar</button>
                                            <button id="btnEliminar" type="button" class="btn btn-danger" onclick="eliminarDetalleAsignacion(this,@Model.actividad_id)">Eliminar</button>
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                }

                @* FIN de si el registro existe, boton agregar detalle, sino no *@

            </div>
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="text-right">
            <input type="submit" class="btn btn-primary" value="Grabar" />
            <a href="~/Asignacion" class="btn btn-danger">Regresar</a>
        </div>
    </div>

}
<hr />

<script>
    function crearElementos(tableID) {

        // Get a reference to the table
        let tableRef = document.getElementById(tableID);

        // Insert a row at the end of the table
        let newRow = tableRef.insertRow(-1);

        // Insert a cell in the row at index || Agregar celdas
        let celdaID = newRow.insertCell(0);
        let celdaArchivo = newRow.insertCell(1);
        let celdaTamanio = newRow.insertCell(2);
        let celdaTipo = newRow.insertCell(3);
        let celdaDescripcion = newRow.insertCell(4);

        // Append a text node to the cell    || Agregar elementos a las celdas
            //Texto ID
        var idTexto = document.createElement('label');
        idTexto.innerHTML = "0";
        idTexto.id = "idEviAct"
            //Celda Archivo
        var idTexto = document.createElement('input');
        idTexto.innerHTML = "0";
        idTexto.id = "idEviAct"
            //Copiando Lista criterio invisible
        var idListaCriterios = document.getElementById('listaCriterios');
        var ListaCriterios = null;
        ListaCriterios = idListaCriterios.cloneNode(true);
            //Copiando Switch estado prueba*
        var idListaEstado = document.getElementById('listaEstados');
        var ListaEstados = null;
        ListaEstados = idListaEstado.cloneNode(true);
            //Agregando 3 botones
        var btnAgregarEditar = document.createElement('button');
                //Configurando boton AGREGAR
        btnAgregarEditar.innerHTML = "Agregar";
        btnAgregarEditar.id = "btnAgregar"
        btnAgregarEditar.type = 'button';
        btnAgregarEditar.className = "btn btn-success"
        btnAgregarEditar.setAttribute('onClick','guardarDetalleAsignacion(this,@Model.actividad_id)')


        var btnCancelar = document.createElement('button');
                //Configurando boton CANCELAR
        btnCancelar.innerHTML = "Cancelar";
        btnCancelar.type = 'button';
        btnCancelar.className = "btn btn-danger"
        btnCancelar.setAttribute('onClick','eliminarElementos(this,@Model.actividad_id)')

        //Agregando los elementos dinamicamente

        celdaID.appendChild(idTexto);
        celdaDocente.appendChild(ListaDocentes);
        celdaCriterio.appendChild(ListaCriterios);
        celdaEstado.appendChild(ListaEstados); // CREAR EL BOTON DESDE 0 o CON OTRO ID PARA QUE FUNCIONE POR SEPARADO  ---- Se creo una lista para simplificar

        celdaAcciones.appendChild(btnAgregarEditar);
        celdaAcciones.appendChild(btnCancelar);

        //Ocultar IDs o valores necesarios
        celdaID.style.editable = 'false';
        celdaAcciones.className = "row justify-content-around";

    }

    function eliminarElementos(r) {
        //Obternet el parametro Index de la fila
        var i = r.parentNode.parentNode.rowIndex;
        //Eliminar la fila seleccionada
        document.getElementById("tablaElementos").deleteRow(i);
    }

    function guardarDetalleAsignacion(r,asig_id) {
        //Obtener el parametro Index de la fila
        var i = r.parentNode.parentNode.rowIndex;
        //Encontrar y colocar en variable el valor de la lista
                //DOCENTE ID
        var doce_id = $('#tablaElementos').find("tr:eq(" + i + ")").find("td:eq(1)").find('select :selected').val();
                //CRITERIO ID
        var crit_id = $('#tablaElementos').find("tr:eq(" + i + ")").find("td:eq(2)").find('select :selected').val();
                //ESTADO VAL
        var esta = $('#tablaElementos').find("tr:eq(" + i + ")").find("td:eq(3)").find('select :selected').val();

        //ENVIO DE VARIABLES PARA GUARDAR REGISTRO

        $.ajax({
            type: "POST",
            url: '@Url.Action("Guardar", "DetalleAsignacion")',
            data: { detalleAsignacion_id: 0, asignacion_id: asig_id, docente_id: doce_id, criterio_id: crit_id, estado: esta },
            success: function () {
                alert("Guardado con éxito.");
                location.reload();
            },
            error: function () {
                alert("Error al registrar.");
            }
        })
    }

    function modificarDetalleAsignacion(r,asig_id) {
        //Obtener el parametro Index de la fila
        var i = r.parentNode.parentNode.rowIndex;                                               ///FALTA ARREGLAR MODIFICAR
        //Encontrar y colocar en variable el valor de la lista
        //DETALLE ASIGNACION ID
        var deAsid = $('#tablaElementos').find("tr:eq(" + i + ")").find("td:eq(0)").text();
                //DOCENTE ID
        var doce_id = $('#tablaElementos').find("tr:eq(" + i + ")").find("td:eq(1)").find('select :selected').val();
                //CRITERIO ID
        var crit_id = $('#tablaElementos').find("tr:eq(" + i + ")").find("td:eq(2)").find('select :selected').val();
                //ESTADO VAL
        var esta = $('#tablaElementos').find("tr:eq(" + i + ")").find("td:eq(3)").find('select :selected').val();

        //ENVIO DE VARIABLES PARA GUARDAR REGISTRO

        $.ajax({
            type: "POST",
            url: '@Url.Action("Guardar", "DetalleAsignacion")',
            data: { detalleAsignacion_id: deAsid, asignacion_id: asig_id, docente_id: doce_id, criterio_id: crit_id, estado: esta },
            success: function () {
                alert("Modificado con éxito.");
                location.reload();
            },
            error: function () {
                alert("Error al registrar.");
            }
        })
    }

    function eliminarDetalleAsignacion(r,asignacion_id) {
        //Obtener el parametro Index de la fila
        var i = r.parentNode.parentNode.rowIndex;
        //Encontrar y colocar en variable el valor de la lista
                //DETALLE ASIGNACION ID
        var deAsid = $('#tablaElementos').find("tr:eq(" + i + ")").find("td:eq(0)").text();
        //ENVIO DE VARIABLES PARA ELIMINAR REGISTRO

        $.ajax({
            type: "POST",
            url: '@Url.Action("Eliminar", "DetalleAsignacion")',
            data: { id: deAsid, asignacion_id :  asignacion_id},
            success: function () {
                alert("Eliminado con éxito.");
                location.reload();
            },
            error: function () {
                alert("Error al eliminar.");
            }
        })
    }

</script>